apply plugin: 'com.google.gms.google-services'
apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

// IMPORTANT: This line explicitly sets the hermesEnabled flag for the :app project.
// This resolves the "Could not get unknown property 'hermesEnabled'" error.
project.ext.set("hermesEnabled", true) 

react {
    // If you explicitly want to control Hermes enablement, you can do it here.
    // However, the 'project.ext.set("hermesEnabled", true)' above should cover it.
    // For React Native 0.70+, Hermes is usually enabled by default if not explicitly disabled.
    // ensureHermesPending = project.hasProperty('hermesEnabled') && project.hermesEnabled.toBoolean()
}

def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion // <<<--- এটি root project থেকে NDK ভার্সন নিবে
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.mygreenbagscannerapp"
    defaultConfig {
        applicationId "com.mygreenbagscannerapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
}

dependencies {
    // React Native core dependencies
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:flipper-integration")

    // Hermes or JSC setup
    // This block now relies on the 'project.ext.hermesEnabled' property set above.
    if (project.ext.hermesEnabled) { 
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    // Firebase dependencies
    implementation platform('com.google.firebase:firebase-bom:33.0.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-database'

    // react-native-vision-camera dependency
    implementation 'com.mrousavy:react-native-vision-camera'
    // This line is essential for react-native-worklets-core to be linked
    implementation project(':react-native-worklets-core')
    
    // react-native-vision-camera-code-scanner (Optional - uncomment if you are using it)
    // If react-native-vision-camera-code-scanner is a direct npm package that exposes an Android library,
    // you might need a line like this. However, often it's handled by autolinking.
    // implementation 'com.example:react-native-vision-camera-code-scanner:X.X.X' 
}

// These lines are correct for React Native autolinking and font handling
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
// If you use react-native-vector-icons and need fonts.gradle, keep the line below:
// apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"